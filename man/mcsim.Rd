% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/function_metacomsim.R
\name{mcsim}
\alias{mcsim}
\title{Simulate metacommunity dynamics}
\usage{
mcsim(
  n_warmup = 200,
  n_burnin = 200,
  n_timestep = 1000,
  propagule_interval = NULL,
  n_species = 5,
  n_patch = 5,
  carrying_capacity = 100,
  interaction_type = "constant",
  alpha = 0,
  min_alpha = NULL,
  max_alpha = NULL,
  r0 = 4,
  sd_niche_width = 1,
  optim_min = -1,
  optim_max = 1,
  distance_matrix = NULL,
  landscape_size = 10,
  mu_env = 0,
  sd_env = 0.1,
  phi = 1,
  spatial_env_cor = FALSE,
  p_dispersal = 0.1,
  theta = 1,
  plot = FALSE
)
}
\arguments{
\item{n_warmup}{numeric scalar. Number of time-steps for warm-up.}

\item{n_burnin}{numeric scalar. Number of time-steps for burn-in.}

\item{n_timestep}{numeric scalar. Number of time-steps to be saved.}

\item{propagule_interval}{numeric scalar. Time interval for propagule introduction during warm-up.}

\item{n_species}{numeric scalar. Number of species in a metacommunity.}

\item{n_patch}{numeric scalar. Number of patches in a metacommunity.}

\item{carrying_capacity}{numeric scalar or vector (with length equal to the number of patches). Carrying capacities of individual patches.}

\item{interaction_type}{character scalar. \code{"constant"} or \code{"random"}. \code{"constant"} assumes the single interaction strength of alpha for all pairs of species. \code{"random"} draws random numbers from a uniform distribution with \code{min_alpha} and \code{max_alpha}.}

\item{min_alpha}{numeric scalar. Minimum value of a uniform distribution that generates alpha.}

\item{max_alpha}{numeric scalar. Maximum value of a uniform distribution that generates alpha.}

\item{r0}{numeric scalar. Maximum population growth rate of the Beverton-Holt model.}

\item{sd_niche_width}{numeric scalar. Niche width of species. Higher values indicate greater niche width.}

\item{optim_min}{numeric scalar. Minimum value of a uniform distribution that generates optimal environmental values of simulated species. Values are randomly assigned to species.}

\item{optim_max}{numeric scalar. Maximum value of a uniform distribution that generates optimal environmental values of simulated species. Values are randomly assigned to species.}

\item{distance_matrix}{numeric matrix. Distance matrix indicating distance between habitat patches. If \code{NULL}, a square landscape with randomly distributed patches will be generated. Default \code{NULL}.}

\item{landscape_size}{numeric scalar. Length of a landscape on a side. Active only when \code{dispersal_matrix = NULL}.}

\item{mu_env}{numeric scalar or vector (with length equal to the number of patches). Mean environmental values of patches.}

\item{sd_env}{numeric scalar. Temporal SD of environmental variation at each patch.}

\item{phi}{numeric scalar. Parameter describing distance decay of spatial autocorrelation in temporal environmental variation (\eqn{\rho = exp(-\phi distance)}).}

\item{spatial_env_cor}{logical. Indicates whether spatial autocorrelation in temporal environmental variation is considered or not. Default \code{FALSE}.}

\item{p_dispersal}{numeric scalar. Probability of dispersal (success probability of a binomial distribution).}

\item{theta}{numeric scalar. Dispersal parameter describing dispersal capability of species (\eqn{exp(-\theta distance)}).}

\item{plot}{logical. If \code{TRUE}, results are plotted.}
}
\value{
\code{dynamics} temporal metacommunity dynamics.

\code{distance_matrix} distance matrix.

\code{interaction_matrix} species interaction matrix.
}
\description{
Simulate metacommunity dynamics
}
\examples{
mcsim(n_warmup = 200, n_burnin = 200, n_timestep = 1000)

}
\author{
Akira Terui, \email{hanabi0111@gmail.com}
}
